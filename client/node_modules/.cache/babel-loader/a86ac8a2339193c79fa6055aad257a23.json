{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { useDispatch } from 'react-redux';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA1edVF43x9e2or6cajtJ78LEbOyD-Cz4k\",\n  authDomain: \"auth-6a813.firebaseapp.com\",\n  projectId: \"auth-6a813\",\n  storageBucket: \"auth-6a813.appspot.com\",\n  messagingSenderId: \"655319751519\",\n  appId: \"1:655319751519:web:1daa807f10d6e83a9c74ea\"\n};\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\nconst dispatch = useDispatch();\nexport const signInWithGoogle = () => {\n  signInWithPopup(auth, provider).then(result => {\n    console.log(result);\n    const name = result.user.displayName;\n    const email = result.user.email;\n    const pfp = result.user.photoURL;\n    const res = result.user;\n    const token = result.user.accessToken;\n    dispatch({\n      type: 'AUTH',\n      data: {\n        res,\n        token\n      }\n    });\n    localStorage.setItem(\"name\", name);\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"profilePicture\", pfp);\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["C:/Users/zacha/OneDrive/Desktop/a-tech-mag/client/src/components/Auth/Firebase.js"],"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","useDispatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","provider","dispatch","signInWithGoogle","then","result","console","log","name","user","displayName","email","pfp","photoURL","res","token","accessToken","type","data","localStorage","setItem","catch","error"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAkBC,kBAAlB,EAAsCC,eAAtC,QAA6D,eAA7D;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,4BAFS;AAGrBC,EAAAA,SAAS,EAAE,YAHU;AAIrBC,EAAAA,aAAa,EAAE,wBAJM;AAKrBC,EAAAA,iBAAiB,EAAE,cALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;AASA,MAAMC,GAAG,GAAGZ,aAAa,CAACK,cAAD,CAAzB;AACA,OAAO,MAAMQ,IAAI,GAAGZ,OAAO,CAACW,GAAD,CAApB;AAEP,MAAME,QAAQ,GAAG,IAAIZ,kBAAJ,EAAjB;AAEA,MAAMa,QAAQ,GAAGX,WAAW,EAA5B;AAEA,OAAO,MAAMY,gBAAgB,GAAG,MAAM;AAClCb,EAAAA,eAAe,CAACU,IAAD,EAAOC,QAAP,CAAf,CAAgCG,IAAhC,CAAsCC,MAAD,IAAY;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,UAAMG,IAAI,GAAGH,MAAM,CAACI,IAAP,CAAYC,WAAzB;AACA,UAAMC,KAAK,GAAGN,MAAM,CAACI,IAAP,CAAYE,KAA1B;AACA,UAAMC,GAAG,GAAGP,MAAM,CAACI,IAAP,CAAYI,QAAxB;AAEA,UAAMC,GAAG,GAAGT,MAAM,CAACI,IAAnB;AACA,UAAMM,KAAK,GAAGV,MAAM,CAACI,IAAP,CAAYO,WAA1B;AAEAd,IAAAA,QAAQ,CAAC;AAAEe,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,IAAI,EAAE;AAAEJ,QAAAA,GAAF;AAAOC,QAAAA;AAAP;AAAtB,KAAD,CAAR;AAEAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BZ,IAA7B;AACAW,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BT,KAA9B;AACAQ,IAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCR,GAAvC;AACH,GAdD,EAcGS,KAdH,CAcUC,KAAD,IAAW;AAChBhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,KAAZ;AACH,GAhBD;AAiBH,CAlBM","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA1edVF43x9e2or6cajtJ78LEbOyD-Cz4k\",\r\n  authDomain: \"auth-6a813.firebaseapp.com\",\r\n  projectId: \"auth-6a813\",\r\n  storageBucket: \"auth-6a813.appspot.com\",\r\n  messagingSenderId: \"655319751519\",\r\n  appId: \"1:655319751519:web:1daa807f10d6e83a9c74ea\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\n\r\nconst provider = new GoogleAuthProvider();\r\n\r\nconst dispatch = useDispatch();\r\n\r\nexport const signInWithGoogle = () => {\r\n    signInWithPopup(auth, provider).then((result) => {\r\n        console.log(result);\r\n        const name = result.user.displayName;\r\n        const email = result.user.email;\r\n        const pfp = result.user.photoURL;\r\n\r\n        const res = result.user;\r\n        const token = result.user.accessToken;\r\n\r\n        dispatch({ type: 'AUTH', data: { res, token }});\r\n\r\n        localStorage.setItem(\"name\", name);\r\n        localStorage.setItem(\"email\", email);\r\n        localStorage.setItem(\"profilePicture\", pfp);\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}
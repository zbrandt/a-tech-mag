{"ast":null,"code":"import _objectSpread from\"C:/Users/zacha/OneDrive/Desktop/a-tech-mag/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/zacha/OneDrive/Desktop/a-tech-mag/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{TextField,Button,Typography,Paper}from'@material-ui/core';import FileBase from'react-file-base64';import{useDispatch,useSelector}from'react-redux';import useStyles from'./styles';import{createPost,updatePost}from'../../actions/posts';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Form=function Form(_ref){var _user$result3;var currentId=_ref.currentId,setCurrentId=_ref.setCurrentId;var _useState=useState({title:'',message:'',tags:'',selectedFile:''}),_useState2=_slicedToArray(_useState,2),postData=_useState2[0],setPostData=_useState2[1];var post=useSelector(function(state){return currentId?state.posts.find(function(p){return p._id===currentId;}):null;});var classes=useStyles();var dispatch=useDispatch();var user=JSON.parse(localStorage.getItem('profile'));useEffect(function(){if(post){setPostData(post);}},[post]);var handleSubmit=function handleSubmit(e){e.preventDefault();if(currentId){var _user$result;dispatch(updatePost(currentId,_objectSpread(_objectSpread({},postData),{},{name:user===null||user===void 0?void 0:(_user$result=user.result)===null||_user$result===void 0?void 0:_user$result.name})));}else{var _user$result2;dispatch(createPost(_objectSpread(_objectSpread({},postData),{},{name:user===null||user===void 0?void 0:(_user$result2=user.result)===null||_user$result2===void 0?void 0:_user$result2.name})));}clear();};var clear=function clear(){setCurrentId(null);setPostData({title:'',message:'',tags:'',selectedFile:''});};if(!(user!==null&&user!==void 0&&(_user$result3=user.result)!==null&&_user$result3!==void 0&&_user$result3.name)){return/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsx(Typography,{variant:\"h6\",align:\"center\",children:\"Sign in first.\"})});}return/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsxs(\"form\",{autoComplete:\"off\",noValidate:true,className:\"\".concat(classes.root,\" \").concat(classes.form),onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",children:[currentId?'Editing':'Creating',\" a post\"]}),/*#__PURE__*/_jsx(TextField,{name:\"title\",variant:\"outlined\",label:\"Title\",fullWidth:true,value:postData.title,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{title:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"message\",variant:\"outlined\",label:\"Message\",fullWidth:true,value:postData.message,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{message:e.target.value}));}}),/*#__PURE__*/_jsx(TextField,{name:\"tags\",variant:\"outlined\",label:\"Tags\",fullWidth:true,value:postData.tags,onChange:function onChange(e){return setPostData(_objectSpread(_objectSpread({},postData),{},{tags:e.target.value.split(',')}));}}),/*#__PURE__*/_jsx(\"div\",{className:classes.fileInput,children:/*#__PURE__*/_jsx(FileBase,{type:\"file\",multiple:false,onDone:function onDone(_ref2){var base64=_ref2.base64;return setPostData(_objectSpread(_objectSpread({},postData),{},{selectedFile:base64}));}})}),/*#__PURE__*/_jsx(Button,{className:classes.buttonSubmit,variant:\"contained\",color:\"primary\",size:\"large\",type:\"submit\",fullWidth:true,children:\"Submit\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"secondary\",size:\"small\",onClick:clear,fullWidth:true,children:\"Clear\"})]})});};export default Form;","map":{"version":3,"sources":["C:/Users/zacha/OneDrive/Desktop/a-tech-mag/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","title","message","tags","selectedFile","postData","setPostData","post","state","posts","find","p","_id","classes","dispatch","user","JSON","parse","localStorage","getItem","handleSubmit","e","preventDefault","name","result","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport useStyles from './styles';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: '' });\r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            setPostData(post);\r\n        } \r\n    }, [post])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (currentId) {\r\n            dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\r\n        } else {\r\n            dispatch(createPost({ ...postData, name: user?.result?.name }));    \r\n        }\r\n        clear();\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({ title: '', message: '', tags: '', selectedFile: '' });\r\n    }\r\n\r\n    if (!user?.result?.name) {\r\n        return (\r\n            <Paper className={classes.paper}>\r\n                <Typography variant=\"h6\" align=\"center\">\r\n                    Sign in first.\r\n                </Typography>\r\n            </Paper>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a post</Typography>\r\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ... postData, title: e.target.value })} />\r\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ... postData, message: e.target.value })} />\r\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ... postData, tags: e.target.value.split(',') })} />\r\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({ ... postData, selectedFile: base64 })} /></div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}
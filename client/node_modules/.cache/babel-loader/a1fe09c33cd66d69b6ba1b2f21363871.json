{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/zacha/OneDrive/Desktop/a-tech-mag/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","state","isLoading","posts","action","type","payload","map","post","_id","filter","data","currentPage","numberOfPages"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2CC,IAA3C,EAAiDC,eAAjD,EAAkEC,aAAlE,EAAiFC,WAAjF,QAAoG,0BAApG;AAEA,gBAAe,YAAoD;AAAA,MAAnDC,KAAmD,uEAA3C;AAAEC,IAAAA,SAAS,EAAE,IAAb;AAAmBC,IAAAA,KAAK,EAAE;AAA1B,GAA2C;AAAA,MAAXC,MAAW;;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,aAAL;AACI,aAAO,EAAE,GAAGE,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACJ,SAAKF,WAAL;AACI,aAAO,EAAE,GAAGC,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACJ,SAAKJ,eAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHE,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAKT,IAAL;AACI,aAAO,EAAC,GAAGI,KAAJ;AAAWE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYI,GAAZ,CAAiBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAA7E;AAAlB,OAAP;;AACJ,SAAKd,MAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAWE,QAAAA,KAAK,EAAE,CAAE,GAAIF,KAAK,CAACE,KAAZ,EAAmBC,MAAM,CAACE,OAA1B;AAAlB,OAAP;;AACJ,SAAKX,MAAL;AACI,aAAO,EAAC,GAAGM,KAAJ;AAAWE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYI,GAAZ,CAAiBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAkDE,IAA5E;AAAlB,OAAP;;AACJ,SAAKZ,MAAL;AACI,aAAO,EAAC,GAAGK,KAAJ;AAAWE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYO,MAAZ,CAAoBF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAjD;AAAlB,OAAP;;AACJ,SAAKb,SAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeK,IAFnB;AAGHC,QAAAA,WAAW,EAAER,MAAM,CAACE,OAAP,CAAeM,WAHzB;AAIHC,QAAAA,aAAa,EAAET,MAAM,CAACE,OAAP,CAAeO;AAJ3B,OAAP;;AAOJ;AACI,aAAOZ,KAAP;AA3BR;AA6BH,CA9BD","sourcesContent":["import {FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from '../constants/actionTypes';\r\n\r\nexport default (state = { isLoading: true, posts: [] }, action) => {\r\n    switch (action.type) {\r\n        case START_LOADING:\r\n            return { ...state, isLoading: true };\r\n        case END_LOADING:\r\n            return { ...state, isLoading: false };\r\n        case FETCH_BY_SEARCH:\r\n            return {\r\n                ...state,\r\n                posts: action.payload,\r\n            };\r\n        case LIKE:\r\n            return {...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post)};\r\n        case CREATE:\r\n            return {...state, posts: [ ... state.posts, action.payload]};\r\n        case UPDATE:\r\n            return {...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload: post)};\r\n        case DELETE:\r\n            return {...state, posts: state.posts.filter((post) => post._id !== action.payload)};\r\n        case FETCH_ALL:\r\n            return {\r\n                ...state,\r\n                posts: action.payload.data,\r\n                currentPage: action.payload.currentPage,\r\n                numberOfPages: action.payload.numberOfPages,\r\n            };\r\n       \r\n        default:\r\n            return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
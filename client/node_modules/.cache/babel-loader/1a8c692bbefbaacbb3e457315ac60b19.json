{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api';\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/zacha/OneDrive/Desktop/a-tech-mag/client/src/actions/posts.js"],"names":["FETCH_ALL","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","api","getPosts","page","dispatch","data","fetchPosts","console","log","type","payload","error","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","deletePost","likePost"],"mappings":"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","sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE} from '../constants/actionTypes';\r\nimport * as api from '../api';\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts(page);\r\n\r\n        console.log(data);\r\n\r\n        dispatch({ type: FETCH_ALL , payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n\r\n        dispatch({ type: FETCH_BY_SEARCH , payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPost(post);\r\n\r\n        dispatch({ type: CREATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n\r\n        dispatch({type: UPDATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n\r\n        dispatch({ type: DELETE, payload: id});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n\r\n        dispatch({ type: LIKE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\nimport * as api from '../api';\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    console.log(data);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    console.log(data);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (post, navigate) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    navigate(`/posts/${data.id}`);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Users/zacha/OneDrive/Desktop/a-tech-mag/client/src/actions/posts.js"],"names":["FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","START_LOADING","END_LOADING","api","getPost","id","dispatch","type","data","fetchPost","console","log","payload","error","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","navigate","updatePost","deletePost","likePost"],"mappings":"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","sourcesContent":["import { FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, START_LOADING, END_LOADING } from '../constants/actionTypes';\r\nimport * as api from '../api';\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data } = await api.fetchPost(id);\r\n\r\n        console.log(data);\r\n\r\n        dispatch({ type: FETCH_POST , payload: data });\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getPosts = (page) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data } = await api.fetchPosts(page);\r\n\r\n        console.log(data);\r\n\r\n        dispatch({ type: FETCH_ALL , payload: data });\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n\r\n        dispatch({ type: FETCH_BY_SEARCH , payload: data });\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createPost = (post, navigate) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: START_LOADING });\r\n        const { data } = await api.createPost(post);\r\n\r\n        navigate(`/posts/${data.id}`);\r\n\r\n        dispatch({ type: CREATE, payload: data });\r\n        dispatch({ type: END_LOADING });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n\r\n        dispatch({type: UPDATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n\r\n        dispatch({ type: DELETE, payload: id});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n\r\n        dispatch({ type: LIKE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}